<?xml version="1.0" encoding="UTF-8"?>
<config>
    <!-- Jenkins Configuration for Laravel Multi-tenant CI/CD Pipeline -->
    
    <!-- Required Jenkins Plugins -->
    <plugins>
        <!-- Core Pipeline Plugins -->
        <plugin name="workflow-aggregator" version="2.6" />
        <plugin name="git" version="4.11.0" />
        <plugin name="credentials" version="2.6.1" />
        
        <!-- SonarQube Integration -->
        <plugin name="sonar" version="2.14" />
        <plugin name="sonar-quality-gates" version="1.3.0" />
        
        <!-- Security Scanning -->
        <plugin name="trivy" version="1.0.0" />
        <plugin name="dependency-check-jenkins-plugin" version="5.4.0" />
        
        <!-- Code Quality -->
        <plugin name="warnings-ng" version="11.0.0" />
        <plugin name="cobertura" version="1.17" />
        <plugin name="jacoco" version="3.3.2" />
        
        <!-- Docker Integration -->
        <plugin name="docker-plugin" version="1.5" />
        <plugin name="docker-workflow" version="1.28" />
        
        <!-- Notifications -->
        <plugin name="email-ext" version="2.83" />
        <plugin name="slack" version="2.48" />
        
        <!-- Build Tools -->
        <plugin name="ant" version="1.13" />
        <plugin name="maven-plugin" version="3.19" />
        
        <!-- UI Enhancements -->
        <plugin name="blueocean" version="1.25.3" />
        <plugin name="pipeline-stage-view" version="2.19" />
    </plugins>
    
    <!-- Global Tool Configuration -->
    <tools>
        <!-- PHP Configuration -->
        <tool name="PHP" type="php">
            <installations>
                <installation name="PHP-8.2" home="/usr/bin/php">
                    <properties>
                        <property name="php.version" value="8.2" />
                    </properties>
                </installation>
            </installations>
        </tool>
        
        <!-- Composer Configuration -->
        <tool name="Composer" type="composer">
            <installations>
                <installation name="Composer" home="/usr/local/bin/composer">
                    <properties>
                        <property name="composer.version" value="2.5" />
                    </properties>
                </installation>
            </installations>
        </tool>
        
        <!-- SonarQube Scanner -->
        <tool name="SonarQubeScanner" type="sonarRunner">
            <installations>
                <installation name="SonarQubeScanner" home="/opt/sonar-scanner">
                    <properties>
                        <property name="sonar.version" value="4.8.0" />
                    </properties>
                </installation>
            </installations>
        </tool>
    </tools>
    
    <!-- Credentials Configuration -->
    <credentials>
        <!-- SonarQube Token -->
        <credential id="sonar-token" type="string">
            <description>SonarQube Authentication Token</description>
            <scope>GLOBAL</scope>
        </credential>
        
        <!-- GitHub Credentials -->
        <credential id="github-credentials" type="usernamePassword">
            <description>GitHub Username/Password or Token</description>
            <scope>GLOBAL</scope>
        </credential>
    </credentials>
    
    <!-- Environment Variables -->
    <environmentVariables>
        <variable name="PHP_VERSION" value="8.2" />
        <variable name="COMPOSER_VERSION" value="2.5" />
        <variable name="SONAR_HOST_URL" value="http://localhost:9000" />
        <variable name="DOCKER_REGISTRY" value="your-registry.com" />
    </environmentVariables>
    
    <!-- Pipeline Configuration -->
    <pipeline>
        <triggers>
            <!-- GitHub Webhook Trigger -->
            <trigger type="github">
                <events>
                    <event>push</event>
                    <event>pull_request</event>
                </events>
                <branches>
                    <branch>main</branch>
                    <branch>develop</branch>
                </branches>
            </trigger>
            
            <!-- Poll SCM Trigger -->
            <trigger type="pollscm">
                <schedule>H/5 * * * *</schedule>
            </trigger>
        </triggers>
        
        <!-- Build Parameters -->
        <parameters>
            <parameter name="BRANCH" type="string" default="main" />
            <parameter name="ENVIRONMENT" type="choice" choices="dev,staging,prod" default="dev" />
            <parameter name="SKIP_TESTS" type="boolean" default="false" />
            <parameter name="SKIP_SECURITY_SCAN" type="boolean" default="false" />
        </parameters>
    </pipeline>
</config> 